#!/usr/bin/env python3

import getpass
import re
import yaml
import glob
import pathlib
import argparse
import virt_lightning as vl


configuration = {
    'libvirt_uri': 'qemu:///session',
    'bridge': 'virbr0',
    'username': getpass.getuser(),
}


def up(virt_lightning_yaml_path, context):
    fd = open(virt_lightning_yaml_path, 'r')
    host_definitions = yaml.load(fd)
    hv = vl.LibvirtHypervisor(configuration)
    for host in host_definitions:
        if 'name' not in host:
            host['name'] = re.sub('\W+','', host['distro'])
        domain = hv.create_domain()
        domain.context(context)
        domain.name(host['name'])
        domain.ssh_key_file(configuration.get('ssh_key_file', '~/.ssh/id_rsa.pub'))
        domain.username(configuration.get('username', getpass.getuser()))
        domain.vcpus(host.get('vcpus'))
        domain.memory(host.get('memory', 768))
        domain.add_root_disk(host['distro'])
        domain.add_swap_disk(host.get('swap_size', 1))
        domain.attachBridge(configuration['bridge'])
        domain.start()

def ansible_inventory(context):
    hv = vl.LibvirtHypervisor(configuration)
    for domain in hv.list_domains():
        if domain.context() == context:
            print("%s ansible_host=%s ansible_username=%s" % (domain.name(), domain.get_ipv4(), domain.username()))

def status(context=None):
    hv = vl.LibvirtHypervisor(configuration)
    for domain in hv.list_domains():
        if context and context != domain.context():
            continue
        print("%s %s %s %s" % (domain.name(), domain.get_ipv4(), domain.context(), domain.username()))

def down(context):
    hv = vl.LibvirtHypervisor(configuration)
    for domain in hv.list_domains():
        if domain.context() == context:
            domain.clean_up()


def list_distro():
    path = '%s/.local/share/libvirt/images/upstream' % (pathlib.Path.home())
    for path in glob.glob(path + '/*.qcow2'):
        distro = pathlib.Path(path).stem
        if 'no-cloud-init' not in distro:
            print('- distro: %s' % distro)


# for i in range(1, 10):
#     domain = hv.addDomain()
#     domain.name('bibo-%d' % i)
#     domain.context('aaa')
#     domain.vcpus(1)
#     domain.memory(768)
#     domain.add_root_disk('centos-7')
#     domain.add_swap_disk()
#     domain.attachBridge('virbr0')
#     domain.start()
#print(domain.set_user_password('root', 'bibi'))
#print(domain.get_ipv4())

parser = argparse.ArgumentParser(description='virt-lightning')
parser.add_argument(
    'action',
    choices=['up', 'down', 'status', 'ansible_inventory', 'distro', 'clean_all', 'status_all'],
    help='Action')
parser.add_argument(
    '--virt-lightning-yaml',
    default='virt-lightning.yaml',
    help='point on an alternative virt-lightning.yaml file (default: %(default)s)')
parser.add_argument(
    '--context',
    default='default',
    help='change the name of the context (default: %(default)s)')

args = parser.parse_args()


if args.action == 'up':
    up(args.virt_lightning_yaml, args.context)
elif args.action == 'down':
    down(args.context)
elif args.action == 'ansible_inventory':
    ansible_inventory(args.context)
elif args.action == 'distro':
    list_distro()
elif args.action == 'clean_all':
    clean_all()
elif args.action == 'status_all':
    status()
elif args.action == 'status':
    status(args.context)
